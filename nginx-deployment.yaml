apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    worker_processes  auto;

    events {
      worker_connections  1024;
    }

    http {
      include       mime.types;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

      sendfile        on;
      tcp_nodelay     on;
      tcp_nopush      on;
      client_max_body_size 200m;

      gzip on;
      gzip_comp_level 3;
      gzip_min_length 1000;
      gzip_types
            text/plain
            text/css
            application/json
            application/x-javascript
            text/xml
            text/javascript;

      proxy_redirect     off;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      include conf.d/*.conf;
      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 10m;
    }
  site.conf: |
    server {
        listen       80 ssl;
        listen       [::]:80 ssl;
        server_name  smart.parksirius.ru;

        keepalive_timeout   70;

        ssl_certificate /ssl/smart.parksirius.ru.cer;
        ssl_certificate_key /ssl/smart.parksirius.ru.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        root /data;

        location  = /admin {
            proxy_pass http://web:8000/admin;
        }

        location @backend {
            proxy_pass http://web:8000;
        }

        location / {
            try_files $uri $uri/ @backend;
        }

        error_page   404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.19.2
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /etc/nginx
            name: nginx-conf
          - mountPath: /ssl
            name: keys
      imagePullSecrets:
        - name: regcred
      volumes:
        - name: keys
          hostPath:
            path: /home/letsencrypt/.acme.sh/smart.parksirius.ru
            type: Directory
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: site.conf
                path: conf.d/site.conf